'''
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would

be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
import time
start = time.time()

print('time:', time.time() - start)
'''
import time
# To check calculation time
start = time.time()

def findDivisor(n):
    # I do not understand yet
    # make squared number
    loop = n ** 0.5
    # If the number is squared number
    if loop == int(loop):
        count = 1
    # if number is not squared number
    else:
        count = 0
    i = 1

    while i < loop:
        # Divisible add 2
        if n % i == 0:
            count += 2
        i += 1
    return count
# Default value of triangle
i = 1
# Default value of triangle
triangle_num = 0
while True:
    # Add number
    triangle_num = triangle_num + i
    # Move to divisor function
    number_div = findDivisor(triangle_num)
    # Print the elements to check the value
    print('{0} : Triangle number is {1}, The number of divisor is {2}'.format(i, triangle_num, number_div))
    # If the number of divisor is greater than 500 then break for while loop
    if number_div > 500:
        break
    i += 1

print(triangle_num)
print(time.time() - start)